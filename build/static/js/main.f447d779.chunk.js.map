{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Note.js","components/Tasks.js","components/AddTask.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Note","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f447d779.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color,text, onClick}) => {\r\n    return (\r\n         <button \r\n         onClick={onClick} \r\n         style={{backgroundColor: color}}\r\n         className='btn'>\r\n        {text}\r\n    </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps ={\r\n    color:'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button","import PropTypes from 'prop-types'\r\n\r\nimport Button from './Button'\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n\r\n    return (\r\n        <header className='header'>\r\n           <h1>{title}</h1> \r\n           <Button\r\n                color={showAdd ? 'red' : 'green'}\r\n                text={showAdd ? 'Close' : 'Add'}\r\n                onClick={onAdd}\r\n           />\r\n        </header>\r\n    )\r\n    }\r\n\r\nHeader.defaultProps = {\r\n   title: 'Bug Tracker',\r\n   \r\n}  \r\n\r\nHeader.propTypes={\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n\r\n    return (\r\n        <div className= {`task ${task.reminder ? \r\n            'reminder' : ''}`} \r\n            onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>\r\n                {task.text}\r\n                <FaTimes \r\n                    style={{ color:'red', cursor: \r\n                    'pointer'}} \r\n                    onClick={() => onDelete(task.id)} \r\n              />\r\n              </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n }\r\nexport default Task","const Note = ({title, onAdd, showAdd}) => {\r\n        return (\r\n            <header className='header'>\r\n               <h5>Double click to show \"in progress\" status with greens sidebar</h5> \r\n            </header>\r\n        )\r\n        }\r\n\r\nexport default Note\r\n","import Task from './Task'\r\nimport Note from './Note'\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n    return (\r\n        <>\r\n        <Note />\r\n         {tasks.map((task, index) => (\r\n         <Task key={index} task={task} \r\n         onDelete={onDelete} \r\n         onToggle={onToggle}\r\n         />\r\n         ))}\r\n         \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text,setText] = useState('')\r\n    const [day,setDay] = useState('')\r\n    const [reminder,setReminder] = useState(false)\r\n    \r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text){\r\n            alert('Please add a task/bug')\r\n            return\r\n        }\r\n\r\n        onAdd({ text, day, reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className = 'add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task/Bug</label>\r\n                <input type='text' placeholder='Add \r\n                Task/Bug' value={text} \r\n                onChange={(e) => setText(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Due Date/Time</label>\r\n                <input type='text' placeholder='Add Due Date/Time'\r\n                value={day} \r\n                onChange={(e) => setDay(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>In Progress</label>\r\n                <input type='checkbox' \r\n                checked={reminder}\r\n                value={reminder} \r\n                onChange={(e) => setReminder(e.currentTarget.checked)}\r\n                /> \r\n            </div>\r\n\r\n            <input type='submit' value='Save Task' \r\n            className='btn btn-block' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { useState} from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\n\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([ ])\n\nconst addTask =  (task) => {\n  const id = Math.floor(Math.random()* 10000) + 1\n  const newTask = { id, ...task}\n  \n  setTasks([...tasks, newTask])\n}\n\nconst deleteTask =  (id) => {\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\nconst toggleReminder = (id) => {\n  setTasks(\n    tasks.map((task) => \n      task.id === id ? {...task, reminder:\n      !task.reminder} : task\n      )\n  )\n}\n\nreturn (\n    <div className='container'>\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n            {showAddTask && <AddTask onAdd={addTask} />}\n            {tasks.length > 0 ? \n            (\n              <Tasks\n                tasks={tasks}\n                onDelete={deleteTask}\n                onToggle={toggleReminder}\n              />\n            ) : (\n              'No Bugs to Fix'\n            )}\n   <Footer />\n    </div>\n\n)\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}